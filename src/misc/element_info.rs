use std::collections::HashMap;

use lazy_static::lazy_static;

lazy_static! {
    pub static ref ELEMENTS: Vec<&'static str> = vec![
        "H", "He", "Li", "Be", "B", "C", "N", "O", "F", "Ne", "Na", "Mg", "Al", "Si", "P", "S",
        "Cl", "Ar", "K", "Ca", "Sc", "Ti", "V", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "Ga",
        "Ge", "As", "Se", "Br", "Kr", "Rb", "Sr", "Y", "Zr", "Nb", "Mo", "Tc", "Ru", "Rh", "Pd",
        "Ag", "Cd", "In", "Sn", "Sb", "Te", "I", "Xe", "Cs", "Ba", "La", "Ce", "Pr", "Nd", "Pm",
        "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", "Er", "Tm", "Yb", "Lu", "Hf", "Ta", "W", "Re", "Os",
        "Ir", "Pt", "Au", "Hg", "Tl", "Pb", "Bi", "Po", "At", "Rn", "Fr", "Ra", "Ac", "Th", "Pa",
        "U", "Np", "Pu", "Am", "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg",
        "Bh", "Hs", "Mt", "Ds", "Rg", "Cn", "Nh", "Fl", "Mc", "Lv", "Ts", "Og",
    ];
    pub static ref ELEMENT_WEIGHTS: HashMap<&'static str, f32> = HashMap::from([
        ("H", 1.008),
        ("He", 4.003),
        ("Li", 6.941),
        ("Be", 9.012),
        ("B", 10.81),
        ("C", 12.01),
        ("N", 14.01),
        ("O", 16.00),
        ("F", 19.00),
        ("Ne", 20.18),
        ("Na", 22.99),
        ("Mg", 24.31),
        ("Al", 26.98),
        ("Si", 28.09),
        ("P", 30.97),
        ("S", 32.07),
        ("Cl", 35.45),
        ("Ar", 39.95),
        ("K", 39.10),
        ("Ca", 40.08),
        ("Sc", 44.96),
        ("Ti", 47.88),
        ("V", 50.94),
        ("Cr", 52.00),
        ("Mn", 54.94),
        ("Fe", 55.85),
        ("Co", 58.93),
        ("Ni", 58.69),
        ("Cu", 63.55),
        ("Zn", 65.39),
        ("Ga", 69.72),
        ("Ge", 72.59),
        ("As", 74.92),
        ("Se", 78.96),
        ("Br", 79.90),
        ("Kr", 83.80),
        ("Rb", 85.47),
        ("Sr", 87.62),
        ("Y", 88.91),
        ("Zr", 91.22),
        ("Nb", 92.91),
        ("Mo", 95.94),
        ("Tc", 99.0),
        ("Ru", 101.1),
        ("Rh", 102.9),
        ("Pd", 106.4),
        ("Ag", 107.9),
        ("Cd", 112.4),
        ("In", 114.8),
        ("Sn", 118.7),
        ("Sb", 121.8),
        ("Te", 127.6),
        ("I", 126.9),
        ("Xe", 131.3),
        ("Cs", 132.9),
        ("Ba", 137.3),
        ("La", 138.9),
        ("Ce", 140.1),
        ("Pr", 140.9),
        ("Nd", 144.2),
        ("Pm", 145.0),
        ("Sm", 150.4),
        ("Eu", 152.0),
        ("Gd", 157.2),
        ("Tb", 158.9),
        ("Dy", 162.5),
        ("Ho", 164.9),
        ("Er", 167.3),
        ("Tm", 168.9),
        ("Yb", 173.0),
        ("Lu", 175.0),
        ("Hf", 178.5),
        ("Ta", 180.9),
        ("W", 183.9),
        ("Re", 186.2),
        ("Os", 190.2),
        ("Ir", 192.2),
        ("Pt", 195.1),
        ("Au", 197.0),
        ("Hg", 200.6),
        ("Tl", 204.4),
        ("Pb", 207.2),
        ("Bi", 209.0),
        ("Po", 209.0),
        ("At", 210.0),
        ("Rn", 222.0),
        ("Fr", 223.0),
        ("Ra", 226.0),
        ("Ac", 227.0),
        ("Th", 232.0),
        ("Pa", 231.0),
        ("U", 238.0),
        ("Np", 237.0),
        ("Pu", 244.0),
        ("Am", 243.0),
        ("Cm", 247.0),
        ("Bk", 247.0),
        ("Cf", 251.0),
        ("Es", 252.0),
        ("Fm", 257.0),
        ("Md", 258.0),
        ("No", 259.0),
        ("Lr", 260.0),
        ("Rf", 261.0),
        ("Db", 262.0),
        ("Sg", 266.0),
        ("Bh", 264.0),
        ("Hs", 277.0),
        ("Mt", 268.0),
        ("Ds", 281.0),
        ("Rg", 272.0),
        ("Cn", 285.0),
        ("Nh", 284.0),
        ("Fl", 289.0),
        ("Mc", 288.0),
        ("Lv", 291.0),
        ("Ts", 294.0),
        ("Og", 294.0),
    ]);
}
